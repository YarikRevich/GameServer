load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/YarikRevich/hide-seek-server
gazelle(
    name = "gazelle",
)

# gazelle:prefix github.com/YarikRevich/hide-seek-server
gazelle(
    name = "gazelle-update",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_repositories",
        "-prune",
    ],
    command = "update-repos",
)

PREPARE = """
    echo " " > $@;\
    if [[ $$OSTYPE == "darwin"* ]]; then\
        if ! which brew &> /dev/null; then\
            echo "brew" >> $@;\
        fi;\
    fi;\
    if ! which go &> /dev/null; then\
        echo "go" >> $@;\
    fi;\
    if ! which docker &> /dev/null; then\
        echo "docker" >> $@;\
    fi;\
    echo EOF >> $@;
"""

genrule(
    name = "prepare",
    outs = ["prepare.stub"],
    cmd = PREPARE,
)

INSTALL_DEPS = """
    if [[ $$OSTYPE == "linux"* ]]; then\
        apt update;\
    fi;\
    while read -r file; do \
        if [[ $$file == "brew"* ]]; then \
			/bin/bash -c "$$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)";\
		fi;\
        if [[ $$file == "go"* ]]; then \
			if [[ $$OSTYPE == "linux"* ]]; then \
				add-apt-repository ppa:longsleep/golang-backports;\
        		apt-get update &> /dev/null;\
        		apt-get install golang-1.17-go -y &> /dev/null;\
			elif [[ $$OSTYPE == "darwin"* ]]; then \
				brew install go@1.17;\
			fi;\
		fi;\
        if [[ $$file == "docker"* ]]; then \
			if [[ $$OSTYPE == "linux"* ]]; then \
				apt install docker.io -y;\
			elif [[ $$OSTYPE == "darwin"* ]]; then \
				brew install docker &> /dev/null;\
        		brew install --cask docker &> /dev/null;\
        		open -a /Applications/Docker.app;\
			fi;\
		fi;\
    done < $(location //:prepare.stub);\
    echo EOF >> $@;
"""

genrule(
    name = "install_deps",
    outs = ["install_deps.stub"],
    cmd = INSTALL_DEPS,
    tools = ["//:prepare.stub"],
)

GEN_PROTO = """
    echo $(locations //api:external_proto_go) >> $@;\
    echo EOF >> $@;
"""

genrule(
    name = "gen_proto",
    srcs = [
        "//api:internal_proto_go",
        "//api:external_proto_go",
    ],
    outs = ["gen_proto.stub"],
    cmd = GEN_PROTO,
    tools = [
        "//api:external_proto_go",
    ],
)

BUILD = """
    echo EOF >> $@;
"""

genrule(
    name = "build",
    srcs = [
        ":gen_proto",
        "//cmd:hide-seek-server",
    ],
    outs = ["build.stub"],
    cmd = BUILD,
)
